name: Build and Push to Artifact Registry

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  set-environment:
    name: Set Environment Variables
    runs-on: ubuntu-latest
    outputs:
      env: ${{ steps.set-env.outputs.env }}
    steps:
      - name: Set environment based on branch
        id: set-env
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/production" ]]; then
            echo "env=PRD" >> $GITHUB_OUTPUT
          elif [[ "${{ github.ref }}" == "refs/heads/staging" ]]; then
            echo "env=STG" >> $GITHUB_OUTPUT
          else
            echo "env=DEV" >> $GITHUB_OUTPUT
          fi

  build-and-push:
    name: Build and Push to Artifact Registry
    runs-on: ubuntu-latest
    needs: set-environment
    permissions:
      contents: read
      id-token: write
    env:
      ENV: ${{ needs.set-environment.outputs.env }}
      GAR_LOCATION: ${{ secrets[format('{0}_GAR_LOCATION', needs.set-environment.outputs.env)] }}
      PROJECT_ID: ${{ secrets[format('{0}_GCP_PROJECT_ID', needs.set-environment.outputs.env)] }}
      REPOSITORY: ${{ secrets[format('{0}_GAR_REPOSITORY', needs.set-environment.outputs.env)] }}
      IMAGE_NAME: ${{ github.event.repository.name }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Show Environment Info
        run: |
          echo "Using environment: ${{ env.ENV }}"

      # Setup Docker Buildx for multi-platform builds
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Authenticate to Google Cloud
      - id: auth
        name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          workload_identity_provider: ${{ secrets[format('{0}_GCP_WORKLOAD_IDENTITY_PROVIDER', env.ENV)] }}
          service_account: ${{ secrets[format('{0}_GCP_SERVICE_ACCOUNT', env.ENV)] }}

      # Install and configure gcloud CLI
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v1

      # Configure Docker to use gcloud as a credential helper for Artifact Registry
      - name: Configure Docker for Artifact Registry
        run: |
          gcloud auth configure-docker ${{ env.GAR_LOCATION }}-docker.pkg.dev --quiet

      # Generate Docker metadata (tags, labels)
      - name: Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', 'main') }}
            type=raw,value=${{ env.ENV }},enable=true
            type=sha,format=short
            type=ref,event=branch
            type=ref,event=pr

      # Build and push Docker image
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          platforms: linux/amd64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
      
      # Show the image URL
      - name: Show image URL
        run: |
          echo "Image pushed to ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.IMAGE_NAME }}"
          echo "Environment: ${{ env.ENV }}"
          echo "Tags: ${{ steps.meta.outputs.tags }}"